## 每日提交记录
  做这个的目的其实是为了监督自己不要偷懒，坚持每天完成项目一部分，并总结一点项目经验。
  由于在学校每天上课量不同，每天完成的量也不太一样。
  总之要保证手感，每天提交github！  Fighting~

--------------------start-----------------------

2018-10-29 第一天打卡√
  今日安排
    子页面总体规划 + 页面逆向工程设计
      |-pages
        |-index
        |-accountBooks
        |-editAccount
        |-accountPage
        |-accountCalendar
        |-accountList
        |-accountDetail
  完成时间
    23:39
  完成度
    项目架构基本确立
  总结
    一个好的项目从架构规划开始^_^ （PS：虽然不专业）

------------------------------------------------

2018-10-30 第二天打卡√
  今日安排
    index、accountBooks页面开干
  完成时间
    第二天 00:17
  完成度
    index完成度——100%
    accountBooks完成度——50%
  总结
    index页面比较简单，页面逻辑较少
    accountBooks页面逻辑较多，只完成了第一部分。
    布局使用flex布局，组件使用swiper组件

------------------------------------------------

2018-10-31 第三天打卡√
  今日安排
    accountBooks页面继续完成
  完成时间
    23:10
  完成度
    accountBooks页面基本完成
  总结
    accountBooks页面使用虚拟数据先搭框架，框架搭好再用真实数据库数据填充

------------------------------------------------

2018-11-01 第四天打卡√
  今日安排
    editAccount页面开始
  完成时间
    23:44
  完成度
    editAccount页面基本布局实现，单选逻辑未实现
  总结
    editAccount页面使用vant框架的panel组件，快速搭建6宫格图片，但是图片单选逻辑并未实现

------------------------------------------------

2018-11-02 第五天打卡√
  今日安排
    editAccount页面继续完成
    云数据库集合建立
      accounts  ---账本表
      cover_photos  ---封面背景图片表
  完成时间
    23:28
  完成度
    editAccount页面单选逻辑实现
    云数据表建立完成
  总结
    editAccount页面逻辑基本完成， 云数据库增删改逻辑在editAccount中

------------------------------------------------

2018-11-03 第六天打卡√
  今日安排
    accountPage页面完成
    极点日历组件引用
  完成时间
    23:50
  完成度
    accountPage总体架构搭建完成， 使用虚拟数据填充
    极点日历组件引入
  总结
    accountPage页面使用flex布局，中间列flex为1
    极点日历样式使用自定义样式

------------------------------------------------

2018-11-04 第七天打卡√
  今日安排
    accountDetail页面开始完成
  完成时间
    23:41
  完成度
    60%左右
  总结
    accountDetail页面细节较多，分为2个tab，采用组件化封装的思想。
    页面使用虚拟数据搭建

------------------------------------------------

2018-11-05 第八天打卡√
  今日安排
    accountDetail页面继续
  完成时间
    第二天00:10
  完成度
    界面差不多完成
    云数据库表建立
      account_detail  ---开支细节表
  总结
    今天满课，写的比较晚。
    但完成了剩余的界面以及数据库数据录入，使页面可以使用云数据库的数据

------------------------------------------------

2018-11-06 第九天打卡√
  今日安排
    accountList页面开始
  完成时间
    22:55
  完成度
    界面差不多完成
    云数据库表建立
      spend_items  ---每日开支表
  总结
    accountList页面较为简单，创建了spend_items云数据库
    早早睡觉~

------------------------------------------------

2018-11-07 第十天打卡√
  今日安排
    accountBooks <=> editAccount 两页面的JS交互逻辑
    实现账本的增删该查
  完成时间
    23:58
  完成度
    交互基本实现
  总结
    accountBooks通过 edit修改按钮到 editAccount页面
    editAccount页面 通过保存按钮建立账本到 accountBooks页面
    之间有许多数据的交互传递操作，MVVM的思想
    最终实现了账本的增删改查

------------------------------------------------

2018-11-08 第十一天打卡√
  今日安排
    accountBooks页面第二种界面显示
  完成时间
    23:11
  完成度
    基本完成
  总结
    布局细节较多，迫不得已使用了定位来布局

------------------------------------------------

2018-11-09 第十二天打卡√
  今日安排
    accountBooks => accountPage 通过数据驱动页面来实现
  完成时间
    第二天00:20
  完成度
    基本完成
  总结
    通过数据表的信息传递，下个页面onLoad生命周期接收

------------------------------------------------

2018-11-10 第十三天打卡√
  今日安排
    日历部分以及accountList页面完善
  完成时间
    22:23
  完成度
    基本完成
  总结
    日历自动高亮+浅紫色显示当日信息
    accountList接收accountPage页面的数据显示到页面
    因为零点双十一，所以早早的结束~~偷一会小懒

------------------------------------------------

2018-11-11 第十四天打卡√
  今日安排
    accountDetail逻辑实现
  完成时间
    23:44
  完成度
    完成一半
  总结
    accountDetail逻辑还是有很多的
    对新增的spend_items表进行增加数据操作
    校验一些合法数值...

------------------------------------------------

2018-11-12 第十五天打卡√
  今日安排
    accountDetail => accountPage 逻辑继续完善
  完成时间
    23:19
  完成度
    差不多完成
  总结
    accountPage需要回显两张数据表的信息
    并显示，之前没注意这个细节

------------------------------------------------

2018-11-13 第十六天打卡√
  今日安排
    accountPage => accountList 逻辑完善
  完成时间
    23:26
  完成度
    差不多完成
  总结
    这里需要用一个算法 将数据表中的同类对象变成
    [{[]}, {[]}, {[]}]的结构， 想了挺久的，最后实现了，还是比较满意

------------------------------------------------

2018-11-14 第十七天打卡√
  今日安排
    整个项目的最终完善
  完成时间
    第二天00:57
  完成度
    基本完善
  总结
    整个项目的一些结构还比较凌乱，可能是之前的架构做的还不够好
    但毕竟是第一次独立完成一个全栈的项目

---------------------end------------------------

项目总结
  整个项目一共耗时17天， 大致完成了所需功能。只是架构方面还需要改善，
  要提醒自己以后的项目要做一个比较好的的架构规划， 这样实现起来更高效，
  维护也更方便。

2018-11-15 一点小修改

2018-11-16 一点小修改

2018-11-18 一点小修改